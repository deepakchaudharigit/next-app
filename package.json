{
  "name": "npcl-dashboard",
  "version": "1.0.0",
  "description": "NPCL Power Management Dashboard",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "dev:inspect": "cross-env NODE_OPTIONS='--inspect' next dev",
    "dev:debug": "cross-env NODE_OPTIONS='--inspect=0.0.0.0:9229' next dev",
    "dev:verbose": "cross-env DEBUG=* next dev",
    "debug:api": "cross-env DEBUG=1 next dev",
    "debug:prisma": "cross-env DEBUG=prisma:* next dev",
    "debug:nextauth": "cross-env NEXTAUTH_DEBUG=true next dev",
    "dev:inspect:win": "set NODE_OPTIONS=--inspect && next dev",
    "dev:debug:win": "set NODE_OPTIONS=--inspect=0.0.0.0:9229 && next dev",
    "dev:verbose:win": "set DEBUG=* && next dev",
    "debug:api:win": "set DEBUG=1 && next dev",
    "debug:prisma:win": "set DEBUG=prisma:* && next dev",
    "debug:nextauth:win": "set NEXTAUTH_DEBUG=true && next dev",
    "typecheck": "tsc -p tsconfig.json --noEmit",
    "build": "npm run typecheck && npm run lint && next build",
    "start": "next start",
    "lint": "next lint --max-warnings=0",
    "test": "jest --verbose --no-coverage",
    "test:full": "jest",
    "test:debug": "jest --verbose --no-coverage --runInBand",
    "test:errors-only": "jest --verbose --no-coverage --silent=false",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest __tests__/lib/**/*.test.ts",
    "test:api": "jest __tests__/api/**/*.test.ts",
    "test:components": "jest __tests__/components/**/*.test.tsx",
    "test:hooks": "jest __tests__/hooks/**/*.test.ts",
    "test:integration": "jest __tests__/integration/**/*.test.ts",
    "test:security": "jest __tests__/lib/auth*.test.ts __tests__/lib/rbac.test.ts __tests__/api/auth/**/*.test.ts",
    "test:changed": "jest --onlyChanged",
    "test:ci": "jest --coverage --watchAll=false --passWithNoTests",
    "test:live": "jest --config=jest.config.live.cjs",
    "test:live:watch": "jest --config=jest.config.live.cjs --watch",
    "test:dev": "npm run dev & sleep 5 && npm run test:live && kill %1",
    "test:postman-style": "npm run test:live --testNamePattern='Live Server Tests'",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:studio": "prisma studio",
    "db:seed": "tsx prisma/seed.ts",
    "setup:auth": "node scripts/setup-auth.js",
    "setup:dev": "node scripts/dev/setup-dev-env.js",
    "reset:dev": "node scripts/dev/reset-dev-data.js",
    "validate:env": "node scripts/validate-env.js",
    "fix:auth": "node scripts/fix-auth.js",
    "cleanup": "node scripts/cleanup-project.js",
    "cleanup:dry-run": "node scripts/cleanup-project.js --dry-run",
    "docker:build": "docker build -t npcl-dashboard .",
    "docker:build:dev": "docker build -f Dockerfile.dev -t npcl-dashboard:dev .",
    "docker:dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up --build",
    "docker:dev:detached": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d --build",
    "docker:dev:tools": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml --profile dev-tools up -d",
    "docker:prod": "docker-compose up -d --build",
    "docker:down": "docker-compose down",
    "docker:down:dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml down",
    "docker:stop": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml down",
    "docker:down:volumes": "docker-compose down -v",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:app": "docker-compose logs -f app",
    "docker:logs:db": "docker-compose logs -f postgres",
    "docker:restart": "docker-compose restart",
    "docker:restart:app": "docker-compose restart app",
    "docker:db:reset": "docker-compose exec app npx prisma migrate reset --force",
    "docker:db:seed": "docker-compose exec app npm run db:seed",
    "docker:db:studio": "docker-compose exec app npx prisma studio",
    "studio:docker": "bash scripts/docker/run-studio-docker.sh",
    "studio:host": "bash scripts/run-studio-host.sh",
    "studio:host:win": "scripts\\run-studio-host.bat",
    "docker:shell": "docker-compose exec app sh",
    "docker:shell:db": "docker-compose exec postgres psql -U postgres -d npcl-auth-db",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "docker:cleanup": "node scripts/docker-cleanup.js",
    "docker:fix-all": "node scripts/docker-fix.js",
    "docker:fix-windows": "powershell -ExecutionPolicy Bypass -File scripts/docker-fix-windows.ps1",
    "docker:check": "node scripts/check-docker.js",
    "docker:switch:alpine": "bash scripts/docker/switch-dockerfile.sh alpine",
    "docker:switch:debian": "bash scripts/docker/switch-dockerfile.sh debian",
    "docker:fix:restart": "docker-compose down -v && npm run docker:dev",
    "fix:quick": "npm install && npx prisma generate && npm run build",
    "fix:clean": "rm -rf node_modules package-lock.json .next && npm install && npx prisma generate",
    "fix:env": "cp .env.example .env && echo 'Please update .env with your configuration'",
    "health:check": "node -e \"console.log('Node:', process.version); console.log('npm:', require('child_process').execSync('npm -v', {encoding: 'utf8'}).trim());\"",
    "lint:fix": "npx eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "type:check": "npx tsc --noEmit",
    "type:check:watch": "npx tsc --noEmit --watch",
    "prisma:fix": "node scripts/fix-prisma-permissions.js",
    "postinstall": "npx prisma generate",
    "dev:test": "concurrently \"npm run dev\" \"npm run test:live:watch\"",
    "setup:performance": "node scripts/install-performance-deps.js",
    "audit:lighthouse": "node scripts/lighthouse-audit.js",
    "audit:pwa": "npx lighthouse http://localhost:3000 --only-categories=pwa --view",
    "audit:performance": "npx lighthouse http://localhost:3000 --only-categories=performance --view",
    "audit:accessibility": "npx lighthouse http://localhost:3000 --only-categories=accessibility --view",
    "audit:seo": "npx lighthouse http://localhost:3000 --only-categories=seo --view",
    "fix:seo": "node scripts/fix-seo-issues.js",
    "test:seo:100": "node scripts/test-seo-100.js",
    "enable:seo": "node scripts/enable-seo-testing.js",
    "health:server": "node scripts/server-health-check.js",
    "dev:audit": "concurrently \"npm run dev\" \"sleep 10 && npm run audit:lighthouse\"",
    "test:pwa": "npm run health:server && npm run audit:pwa",
    "setup:mobile": "node scripts/setup-mobile-pwa.js",
    "start:fresh": "npm run setup:mobile && npm run dev",
    "icons:generate": "node scripts/generate-pwa-icons.js",
    "audit:simple": "node scripts/simple-lighthouse.js",
    "audit:simple:pwa": "node scripts/simple-lighthouse.js pwa",
    "audit:simple:performance": "node scripts/simple-lighthouse.js performance",
    "icons:create": "node scripts/create-placeholder-icons.js",
    "audit:quick": "node scripts/quick-lighthouse.js",
    "audit:manual": "npx lighthouse http://localhost:3000 --view",
    "test:server": "node scripts/test-server.js",
    "analyze:bundle": "node scripts/analyze-bundle.js",
    "perf:optimize": "npm run build && npm run analyze:bundle",
    "perf:test": "npm run audit:performance && npm run audit:lighthouse",
    "bundle:check": "node scripts/simple-bundle-check.js",
    "perf:quick": "npm run bundle:check && npm run audit:performance",
    "test:integration": "jest __tests__/**/*.integration.test.ts",
    "test:e2e": "jest __tests__/e2e/**/*.test.ts",
    "test:performance": "jest __tests__/performance/**/*.test.ts",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:components",
    "test:coverage:full": "jest --coverage --collectCoverageFrom='**/*.{ts,tsx}' --coverageThreshold='{\"global\":{\"branches\":80,\"functions\":80,\"lines\":80,\"statements\":80}}'",
    "monitor:health": "node -e \"fetch('http://localhost:3000/api/health/detailed').then(r=>r.json()).then(console.log)\"",
    "monitor:performance": "node scripts/monitor-performance.js",
    "resilience:test": "node scripts/test-resilience.js",
    "security:test": "node scripts/test-security.js",
    "security:audit": "npm audit && npm run security:test",
    "security:headers": "node -e \"fetch('http://localhost:3000/api/health').then(r=>{console.log('Security Headers:'); ['x-frame-options','x-content-type-options','x-xss-protection','content-security-policy'].forEach(h=>console.log(h+':',r.headers.get(h)))})\"",
    "security:full": "npm run security:audit && npm run resilience:test"
  },
  "dependencies": {
    "@json2csv/plainjs": "^7.0.6",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@types/bcryptjs": "^2.4.6",
    "bcryptjs": "^2.4.3",
    "clsx": "^2.1.1",
    "exceljs": "^4.4.0",
    "ioredis": "^5.7.0",
    "next": "^15.4.0",
    "next-auth": "^4.24.5",
    "nodemailer": "^6.9.7",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "recharts": "^2.8.0",
    "tailwind-merge": "^2.5.4",
    "tailwindcss": "^3.3.6",
    "web-vitals": "^3.5.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@next/bundle-analyzer": "^15.5.2",
    "@prisma/client": "^6.14.0",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.5.1",
    "@types/jest": "^29.5.8",
    "@types/node": "^20.10.4",
    "@types/nodemailer": "^6.4.14",
    "@types/react": "^19.0.0",
    "@types/react-dom": "^19.0.0",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.16",
    "cross-env": "^7.0.3",
    "eslint": "^9.15.0",
    "eslint-config-next": "^15.4.0",
    "eslint-plugin-jest": "^28.8.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "playwright": "^1.40.0",
    "postcss": "^8.4.32",
    "prisma": "^6.14.0",
    "supertest": "^7.1.3",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
