# NPCL Dashboard Development Dockerfile
# Optimized for development with hot reloading

FROM node:18-slim

# Install system dependencies including build tools for native dependencies
# Use faster mirrors and minimal packages for quicker builds
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    openssl \
    ca-certificates \
    curl \
    python3 \
    make \
    g++ \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

WORKDIR /app

# Create directories and set ownership before copying files
RUN mkdir -p uploads logs node_modules .next \
    && chown -R node:node /app

# Switch to node user for all subsequent operations
USER node

# Copy package files
COPY --chown=node:node package.json package-lock.json* ./

# Copy Prisma schema first (needed for postinstall)
COPY --chown=node:node prisma ./prisma

# Install dependencies (this will run postinstall which needs prisma schema)
# Use npm ci with optimizations, fallback to npm install if ci fails
# Set npm configurations for faster, more reliable installs
RUN npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-retries 3 && \
    (npm ci --silent --no-audit --no-fund || npm install --silent --no-audit --no-fund)

# Copy source code
COPY --chown=node:node . .

# Make scripts executable
RUN find scripts -name "*.sh" -type f -exec chmod +x {} \;

# Expose port
EXPOSE 3000

# Set environment variables
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Default command (can be overridden)
CMD ["npm", "run", "dev"]